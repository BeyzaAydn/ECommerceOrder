// <auto-generated />
using System;
using ECommerce.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ecommerce.MVC.Migrations
{
    [DbContext(typeof(EcommerceContext))]
    [Migration("20240602180629_güncelleme")]
    partial class güncelleme
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ECommerce.Model.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ECommerce.Model.Entities.AppUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("ECommerce.Model.Entities.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryName = "Test Category 1",
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 6, 2, 21, 6, 29, 456, DateTimeKind.Local).AddTicks(1549),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Test Category 1 Description",
                            IsActive = true,
                            MasterId = new Guid("a7cd84a4-d95f-41a9-a818-931faf6cf058"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 2,
                            CategoryName = "Test Category 2",
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 6, 2, 21, 6, 29, 456, DateTimeKind.Local).AddTicks(1691),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Test Category 2 Description",
                            IsActive = true,
                            MasterId = new Guid("db80246d-4b65-4fe7-a585-bf194b42adeb"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 3,
                            CategoryName = "Test Category 3",
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 6, 2, 21, 6, 29, 456, DateTimeKind.Local).AddTicks(1697),
                            CreatedIpAddress = "192.168.1.1",
                            Description = "Test Category 3 Description",
                            IsActive = true,
                            MasterId = new Guid("7c60ac5d-cf24-41a4-8afc-98582f4fa765"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ECommerce.Model.Entities.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Freight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShipAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipCity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShipCountry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipPostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipRegion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ECommerce.Model.Entities.OrderDetail", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("ECommerce.Model.Entities.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierID")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("UnitsInStock")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SupplierID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 11,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 6, 2, 21, 6, 29, 463, DateTimeKind.Local).AddTicks(5916),
                            CreatedIpAddress = "192.168.1.1",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("044069a4-43a2-406c-a985-609138e3975a"),
                            ProductName = "Chair",
                            Status = 0,
                            UnitPrice = 2233.01m,
                            UnitsInStock = (short)55,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 12,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 6, 2, 21, 6, 29, 463, DateTimeKind.Local).AddTicks(6266),
                            CreatedIpAddress = "192.168.1.1",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("ba819e3d-615b-415b-9f03-1f31e0b449d6"),
                            ProductName = "Pants",
                            Status = 0,
                            UnitPrice = 5376.64m,
                            UnitsInStock = (short)12,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 13,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 6, 2, 21, 6, 29, 463, DateTimeKind.Local).AddTicks(6289),
                            CreatedIpAddress = "192.168.1.1",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("0d5a0cd5-5b44-426b-80de-311b68a1f653"),
                            ProductName = "Fish",
                            Status = 0,
                            UnitPrice = 4923.52m,
                            UnitsInStock = (short)16,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 14,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 6, 2, 21, 6, 29, 463, DateTimeKind.Local).AddTicks(6304),
                            CreatedIpAddress = "192.168.1.1",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("3d5bc271-1744-4af3-8783-acc6d2d3768b"),
                            ProductName = "Pizza",
                            Status = 0,
                            UnitPrice = 4833.41m,
                            UnitsInStock = (short)4,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 15,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 6, 2, 21, 6, 29, 463, DateTimeKind.Local).AddTicks(6317),
                            CreatedIpAddress = "192.168.1.1",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("37e8fe36-a6bf-404a-b396-e4fd160a8694"),
                            ProductName = "Pants",
                            Status = 0,
                            UnitPrice = 9777.04m,
                            UnitsInStock = (short)35,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 16,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 6, 2, 21, 6, 29, 463, DateTimeKind.Local).AddTicks(6330),
                            CreatedIpAddress = "192.168.1.1",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("b3e865d1-78b7-49ac-badc-1706142e4f96"),
                            ProductName = "Table",
                            Status = 0,
                            UnitPrice = 221.89m,
                            UnitsInStock = (short)88,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 17,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 6, 2, 21, 6, 29, 463, DateTimeKind.Local).AddTicks(6751),
                            CreatedIpAddress = "192.168.1.1",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("0549887c-3b1d-4b1f-a84e-092ad82a95ab"),
                            ProductName = "Table",
                            Status = 0,
                            UnitPrice = 3076.83m,
                            UnitsInStock = (short)77,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 18,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 6, 2, 21, 6, 29, 463, DateTimeKind.Local).AddTicks(6841),
                            CreatedIpAddress = "192.168.1.1",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("b3853a4b-8bfb-4cae-9d79-ee5dd155fd98"),
                            ProductName = "Keyboard",
                            Status = 0,
                            UnitPrice = 8302.23m,
                            UnitsInStock = (short)20,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 19,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 6, 2, 21, 6, 29, 463, DateTimeKind.Local).AddTicks(6856),
                            CreatedIpAddress = "192.168.1.1",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("6b0deb0f-c6eb-4d56-969a-f1fd02bf559d"),
                            ProductName = "Soap",
                            Status = 0,
                            UnitPrice = 7711.43m,
                            UnitsInStock = (short)83,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 20,
                            CategoryId = 1,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 6, 2, 21, 6, 29, 463, DateTimeKind.Local).AddTicks(6875),
                            CreatedIpAddress = "192.168.1.1",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("d131d8d5-162d-4d04-a5ce-465536696c8e"),
                            ProductName = "Tuna",
                            Status = 0,
                            UnitPrice = 3590.77m,
                            UnitsInStock = (short)6,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 21,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 6, 2, 21, 6, 29, 463, DateTimeKind.Local).AddTicks(6889),
                            CreatedIpAddress = "192.168.1.1",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("fc03685e-7693-47ba-81d5-c4e110fa339d"),
                            ProductName = "Gloves",
                            Status = 0,
                            UnitPrice = 8731.42m,
                            UnitsInStock = (short)59,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 22,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 6, 2, 21, 6, 29, 463, DateTimeKind.Local).AddTicks(6901),
                            CreatedIpAddress = "192.168.1.1",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("40b66d64-762b-4c2a-bf7a-35112360c033"),
                            ProductName = "Car",
                            Status = 0,
                            UnitPrice = 6794.40m,
                            UnitsInStock = (short)48,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 23,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 6, 2, 21, 6, 29, 463, DateTimeKind.Local).AddTicks(6914),
                            CreatedIpAddress = "192.168.1.1",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("f23da922-3683-4ed1-a841-98cf9b1b635b"),
                            ProductName = "Shoes",
                            Status = 0,
                            UnitPrice = 7128.84m,
                            UnitsInStock = (short)32,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 24,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 6, 2, 21, 6, 29, 463, DateTimeKind.Local).AddTicks(6927),
                            CreatedIpAddress = "192.168.1.1",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("ed9ce995-4799-43f6-8d79-732b5563ce7d"),
                            ProductName = "Shoes",
                            Status = 0,
                            UnitPrice = 553.24m,
                            UnitsInStock = (short)96,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 25,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 6, 2, 21, 6, 29, 463, DateTimeKind.Local).AddTicks(6942),
                            CreatedIpAddress = "192.168.1.1",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("10dbbea9-3c98-4b9c-8986-f3f11dace4d4"),
                            ProductName = "Salad",
                            Status = 0,
                            UnitPrice = 7227.32m,
                            UnitsInStock = (short)76,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 26,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 6, 2, 21, 6, 29, 463, DateTimeKind.Local).AddTicks(6954),
                            CreatedIpAddress = "192.168.1.1",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("c0dd22b1-9053-4c2f-aa31-e34cbe2d855b"),
                            ProductName = "Shirt",
                            Status = 0,
                            UnitPrice = 1982.73m,
                            UnitsInStock = (short)14,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 27,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 6, 2, 21, 6, 29, 463, DateTimeKind.Local).AddTicks(6966),
                            CreatedIpAddress = "192.168.1.1",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("76851641-11d4-43cb-a32c-31e307356f7e"),
                            ProductName = "Towels",
                            Status = 0,
                            UnitPrice = 6093.27m,
                            UnitsInStock = (short)46,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 28,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 6, 2, 21, 6, 29, 463, DateTimeKind.Local).AddTicks(6982),
                            CreatedIpAddress = "192.168.1.1",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("fe041872-08ff-45ad-bbd6-8cd632fadece"),
                            ProductName = "Sausages",
                            Status = 0,
                            UnitPrice = 4487.73m,
                            UnitsInStock = (short)60,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 29,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 6, 2, 21, 6, 29, 463, DateTimeKind.Local).AddTicks(6994),
                            CreatedIpAddress = "192.168.1.1",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("3ef824c7-f4ed-4949-bbce-190aad27ad74"),
                            ProductName = "Shirt",
                            Status = 0,
                            UnitPrice = 5913.04m,
                            UnitsInStock = (short)83,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 30,
                            CategoryId = 2,
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 6, 2, 21, 6, 29, 463, DateTimeKind.Local).AddTicks(7006),
                            CreatedIpAddress = "192.168.1.1",
                            ImagePath = "http://lorempixel.com/640/480/fashion",
                            IsActive = true,
                            MasterId = new Guid("846cf43d-fb43-435e-8440-9fed51d76fca"),
                            ProductName = "Shirt",
                            Status = 0,
                            UnitPrice = 2585.04m,
                            UnitsInStock = (short)55,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ECommerce.Model.Entities.Supplier", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(155)
                        .HasColumnType("nvarchar(155)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(155)
                        .HasColumnType("nvarchar(155)");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "Test Supplier Adress1",
                            CompanyName = "Test Supplier1",
                            ContactName = "Test Contact1",
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 6, 2, 21, 6, 29, 463, DateTimeKind.Local).AddTicks(9058),
                            CreatedIpAddress = "192.168.1.1",
                            IsActive = true,
                            MasterId = new Guid("584ef8b2-70e8-402d-be37-ee84dbd66e22"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 2,
                            Address = "Test Supplier Adress2",
                            CompanyName = "Test Supplier2",
                            ContactName = "Test Contact2",
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 6, 2, 21, 6, 29, 463, DateTimeKind.Local).AddTicks(9083),
                            CreatedIpAddress = "192.168.1.1",
                            IsActive = true,
                            MasterId = new Guid("5f639e92-9ff9-4005-8ce2-015c8557efc7"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 3,
                            Address = "TestSupplierAdress3",
                            CompanyName = "TestSupplier3",
                            ContactName = "Test Contact3",
                            CreatedComputerName = "BEYZA",
                            CreatedDate = new DateTime(2024, 6, 2, 21, 6, 29, 463, DateTimeKind.Local).AddTicks(9345),
                            CreatedIpAddress = "192.168.1.1",
                            IsActive = true,
                            MasterId = new Guid("5ab69c07-d0cd-4922-b9bf-3af807d09b0c"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ECommerce.Model.Entities.OrderDetail", b =>
                {
                    b.HasOne("ECommerce.Model.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Model.Entities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ECommerce.Model.Entities.Product", b =>
                {
                    b.HasOne("ECommerce.Model.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Model.Entities.Supplier", null)
                        .WithMany("Products")
                        .HasForeignKey("SupplierID");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Model.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Model.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("ECommerce.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ECommerce.Model.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ECommerce.Model.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("ECommerce.Model.Entities.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("ECommerce.Model.Entities.Supplier", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
